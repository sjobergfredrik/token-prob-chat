{"ast":null,"code":"var _jsxFileName = \"/Users/sjobergf/Documents/chatProbs/token-prob-chat/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { getCompletion } from '../services/openaiService';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip as RechartsTooltip } from 'recharts';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColor = probability => {\n  // Red to yellow to green gradient\n  if (probability < 0.3) {\n    return `rgba(255, 0, 0, ${0.2 + probability * 2})`; // More red for very low probs\n  } else if (probability < 0.7) {\n    return `rgba(255, ${Math.floor(255 * (probability - 0.3) / 0.4)}, 0, 0.5)`; // Yellow transition\n  } else {\n    return `rgba(0, 255, 0, ${probability * 0.5})`; // Green for high probs\n  }\n};\nconst Chat = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [stepMode, setStepMode] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tokenTree, setTokenTree] = useState(null);\n  const messagesEndRef = useRef(null);\n  const graphRef = useRef(null);\n\n  // Reset currentStep when a new message is added\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].type === 'assistant') {\n      setCurrentStep(0);\n    }\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const buildTokenTree = (tokens, alternatives) => {\n    const nodes = [];\n    const links = [];\n    let id = 0;\n\n    // Add root node\n    nodes.push({\n      id: id++,\n      name: 'Start',\n      level: 0\n    });\n    tokens.forEach((token, idx) => {\n      // Add main token\n      const tokenNode = {\n        id: id++,\n        name: token.token,\n        probability: token.probability,\n        level: idx + 1\n      };\n      nodes.push(tokenNode);\n\n      // Add link from previous token\n      links.push({\n        source: id - 2,\n        target: id - 1,\n        value: token.probability\n      });\n\n      // Add alternative tokens\n      token.alternatives.slice(0, 3).forEach(alt => {\n        const altNode = {\n          id: id++,\n          name: alt.token,\n          probability: alt.probability,\n          level: idx + 1,\n          isAlternative: true\n        };\n        nodes.push(altNode);\n        links.push({\n          source: id - 2,\n          target: id - 1,\n          value: alt.probability\n        });\n      });\n    });\n    return {\n      nodes,\n      links\n    };\n  };\n  const renderTokenWithTooltip = (token, index) => {\n    const hasStrongAlternatives = token.alternatives.some(alt => alt.probability > token.probability * 0.8);\n    const tooltipContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"token-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Token:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }, this), \" \", token.token]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Probability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this), \" \", (token.probability * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), token.alternatives.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternatives\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Alternatives:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), token.alternatives.map((alt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: alt.probability > token.probability * 0.8 ? '#ff6b6b' : 'inherit'\n          },\n          children: [alt.token, \": \", (alt.probability * 100).toFixed(1), \"%\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Tippy, {\n      content: tooltipContent,\n      placement: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `token ${hasStrongAlternatives ? 'has-alternatives' : ''}`,\n        style: {\n          backgroundColor: getColor(token.probability),\n          borderBottom: hasStrongAlternatives ? '2px dashed #ff6b6b' : 'none',\n          padding: '2px 0',\n          margin: '0 1px',\n          borderRadius: '3px',\n          cursor: 'pointer',\n          display: 'inline-block'\n        },\n        onClick: () => setCurrentStep(index),\n        children: [token.token.replace('Ä ', ' '), hasStrongAlternatives && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '0.7em',\n            verticalAlign: 'super',\n            color: '#ff6b6b',\n            marginLeft: '2px'\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTokens = tokens => {\n    return tokens.map((token, index) => renderTokenWithTooltip(token, index));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!prompt.trim() || isLoading) {\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    const currentPrompt = prompt.trim();\n    const userMessage = {\n      type: 'user',\n      content: currentPrompt\n    };\n\n    // Prepare the messages array for the API call, including the new user message.\n    // Note: `messages` here is the state from the current render cycle.\n    const messagesForApi = [...messages, userMessage];\n\n    // Update the UI immediately with the user's message.\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setPrompt(''); // Clear input field after grabbing its value and updating state.\n\n    try {\n      // Pass the current prompt and the constructed list of messages to the API.\n      const response = await getCompletion(currentPrompt, messagesForApi);\n      const {\n        text,\n        logprobs\n      } = response.choices[0];\n      const {\n        tokens,\n        token_logprobs,\n        top_logprobs\n      } = logprobs;\n      const processedTokens = tokens.map((token, index) => ({\n        token,\n        probability: Math.exp(token_logprobs[index]),\n        alternatives: top_logprobs[index] ? Object.entries(top_logprobs[index]).map(([altToken, logprob]) => ({\n          token: altToken,\n          probability: Math.exp(logprob)\n        })) : []\n      }));\n      const assistantMessage = {\n        type: 'assistant',\n        tokens: processedTokens,\n        content: text\n      };\n\n      // Add assistant's message to the state.\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OpenAI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"High confidence (\\u226550%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'yellow'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Medium confidence (20-49%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Low confidence (<20%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: message.type === 'user' ? 'You' : 'Assistant'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.type === 'user' ? message.content : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tokens-container\",\n            children: renderTokens(message.tokens)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: \"Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"prompt-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: isLoading,\n          className: \"prompt-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          className: \"submit-button\",\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"I4pZ3p3jAJXa0mTYCnauhOVz7Ic=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","getCompletion","ForceGraph2D","BarChart","Bar","XAxis","YAxis","Tooltip","RechartsTooltip","Tippy","jsxDEV","_jsxDEV","getColor","probability","Math","floor","Chat","_s","prompt","setPrompt","isLoading","setIsLoading","error","setError","messages","setMessages","stepMode","setStepMode","currentStep","setCurrentStep","tokenTree","setTokenTree","messagesEndRef","graphRef","length","type","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","buildTokenTree","tokens","alternatives","nodes","links","id","push","name","level","forEach","token","idx","tokenNode","source","target","value","slice","alt","altNode","isAlternative","renderTokenWithTooltip","index","hasStrongAlternatives","some","tooltipContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","i","style","color","content","placement","backgroundColor","borderBottom","padding","margin","borderRadius","cursor","display","onClick","replace","fontSize","verticalAlign","marginLeft","renderTokens","handleSubmit","e","preventDefault","trim","currentPrompt","userMessage","messagesForApi","prevMessages","response","text","logprobs","choices","token_logprobs","top_logprobs","processedTokens","exp","Object","entries","altToken","logprob","assistantMessage","err","console","message","ref","onSubmit","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/sjobergf/Documents/chatProbs/token-prob-chat/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { getCompletion } from '../services/openaiService';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip as RechartsTooltip } from 'recharts';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport './Chat.css';\n\nconst getColor = (probability) => {\n  // Red to yellow to green gradient\n  if (probability < 0.3) {\n    return `rgba(255, 0, 0, ${0.2 + probability * 2})`; // More red for very low probs\n  } else if (probability < 0.7) {\n    return `rgba(255, ${Math.floor(255 * (probability - 0.3) / 0.4)}, 0, 0.5)`; // Yellow transition\n  } else {\n    return `rgba(0, 255, 0, ${probability * 0.5})`; // Green for high probs\n  }\n};\n\nconst Chat = () => {\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [stepMode, setStepMode] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tokenTree, setTokenTree] = useState(null);\n  const messagesEndRef = useRef(null);\n  const graphRef = useRef(null);\n\n  // Reset currentStep when a new message is added\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].type === 'assistant') {\n      setCurrentStep(0);\n    }\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const buildTokenTree = (tokens, alternatives) => {\n    const nodes = [];\n    const links = [];\n    let id = 0;\n\n    // Add root node\n    nodes.push({\n      id: id++,\n      name: 'Start',\n      level: 0\n    });\n\n    tokens.forEach((token, idx) => {\n      // Add main token\n      const tokenNode = {\n        id: id++,\n        name: token.token,\n        probability: token.probability,\n        level: idx + 1\n      };\n      nodes.push(tokenNode);\n\n      // Add link from previous token\n      links.push({\n        source: id - 2,\n        target: id - 1,\n        value: token.probability\n      });\n\n      // Add alternative tokens\n      token.alternatives.slice(0, 3).forEach(alt => {\n        const altNode = {\n          id: id++,\n          name: alt.token,\n          probability: alt.probability,\n          level: idx + 1,\n          isAlternative: true\n        };\n        nodes.push(altNode);\n        links.push({\n          source: id - 2,\n          target: id - 1,\n          value: alt.probability\n        });\n      });\n    });\n\n    return { nodes, links };\n  };\n\n  const renderTokenWithTooltip = (token, index) => {\n    const hasStrongAlternatives = token.alternatives.some(alt => alt.probability > token.probability * 0.8);\n    \n    const tooltipContent = (\n      <div className=\"token-tooltip\">\n        <div><strong>Token:</strong> {token.token}</div>\n        <div><strong>Probability:</strong> {(token.probability * 100).toFixed(1)}%</div>\n        {token.alternatives.length > 0 && (\n          <div className=\"alternatives\">\n            <strong>Alternatives:</strong>\n            {token.alternatives.map((alt, i) => (\n              <div key={i} style={{\n                color: alt.probability > token.probability * 0.8 ? '#ff6b6b' : 'inherit'\n              }}>\n                {alt.token}: {(alt.probability * 100).toFixed(1)}%\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <Tippy key={index} content={tooltipContent} placement=\"top\">\n        <span\n          className={`token ${hasStrongAlternatives ? 'has-alternatives' : ''}`}\n          style={{ \n            backgroundColor: getColor(token.probability),\n            borderBottom: hasStrongAlternatives ? '2px dashed #ff6b6b' : 'none',\n            padding: '2px 0',\n            margin: '0 1px',\n            borderRadius: '3px',\n            cursor: 'pointer',\n            display: 'inline-block'\n          }}\n          onClick={() => setCurrentStep(index)}\n        >\n          {token.token.replace('Ä ', ' ')}\n          {hasStrongAlternatives && \n            <span style={{ \n              fontSize: '0.7em', \n              verticalAlign: 'super',\n              color: '#ff6b6b',\n              marginLeft: '2px'\n            }}>*</span>\n          }\n        </span>\n      </Tippy>\n    );\n  };\n\n  const renderTokens = (tokens) => {\n    return tokens.map((token, index) => renderTokenWithTooltip(token, index));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!prompt.trim() || isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    const currentPrompt = prompt.trim();\n    const userMessage = { type: 'user', content: currentPrompt };\n\n    // Prepare the messages array for the API call, including the new user message.\n    // Note: `messages` here is the state from the current render cycle.\n    const messagesForApi = [...messages, userMessage];\n\n    // Update the UI immediately with the user's message.\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setPrompt(''); // Clear input field after grabbing its value and updating state.\n\n    try {\n      // Pass the current prompt and the constructed list of messages to the API.\n      const response = await getCompletion(currentPrompt, messagesForApi);\n\n      const { text, logprobs } = response.choices[0];\n      const { tokens, token_logprobs, top_logprobs } = logprobs;\n\n      const processedTokens = tokens.map((token, index) => ({\n        token,\n        probability: Math.exp(token_logprobs[index]),\n        alternatives: top_logprobs[index] ? Object.entries(top_logprobs[index]).map(([altToken, logprob]) => ({\n          token: altToken,\n          probability: Math.exp(logprob)\n        })) : []\n      }));\n\n      const assistantMessage = {\n        type: 'assistant',\n        tokens: processedTokens,\n        content: text\n      };\n\n      // Add assistant's message to the state.\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>OpenAI Chat</h1>\n        <div className=\"legend\">\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'green' }}></span>\n            <span>High confidence (â¥50%)</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'yellow' }}></span>\n            <span>Medium confidence (20-49%)</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'red' }}></span>\n            <span>Low confidence (&lt;20%)</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-header\">{message.type === 'user' ? 'You' : 'Assistant'}</div>\n            <div className=\"message-content\">\n              {message.type === 'user' ? (\n                message.content\n              ) : (\n                <div className=\"tokens-container\">\n                  {renderTokens(message.tokens)}\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message assistant\">\n            <div className=\"message-header\">Assistant</div>\n            <div className=\"message-content typing\">Typing...</div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"input-container\">\n        <form onSubmit={handleSubmit} className=\"prompt-form\">\n          <input\n            type=\"text\"\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n            placeholder=\"Type your message...\"\n            disabled={isLoading}\n            className=\"prompt-input\"\n          />\n          <button type=\"submit\" disabled={isLoading} className=\"submit-button\">\n            {isLoading ? 'Sending...' : 'Send'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}