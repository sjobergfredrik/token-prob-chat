{"ast":null,"code":"var _jsxFileName = \"/Users/sjobergf/Documents/chatProbs/token-prob-chat/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { getCompletion } from '../services/openaiService';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip as RechartsTooltip } from 'recharts';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColor = probability => {\n  // Red to yellow to green gradient\n  if (probability < 0.3) {\n    return `rgba(255, 0, 0, ${0.2 + probability * 2})`; // More red for very low probs\n  } else if (probability < 0.7) {\n    return `rgba(255, ${Math.floor(255 * (probability - 0.3) / 0.4)}, 0, 0.5)`; // Yellow transition\n  } else {\n    return `rgba(0, 255, 0, ${probability * 0.5})`; // Green for high probs\n  }\n};\nconst Chat = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [stepMode, setStepMode] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tokenTree, setTokenTree] = useState(null);\n  const messagesEndRef = useRef(null);\n  const graphRef = useRef(null);\n\n  // Reset currentStep when a new message is added\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].type === 'assistant') {\n      setCurrentStep(0);\n    }\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const buildTokenTree = (tokens, alternatives) => {\n    const nodes = [];\n    const links = [];\n    let id = 0;\n\n    // Add root node\n    nodes.push({\n      id: id++,\n      name: 'Start',\n      level: 0\n    });\n    tokens.forEach((token, idx) => {\n      // Add main token\n      const tokenNode = {\n        id: id++,\n        name: token.token,\n        probability: token.probability,\n        level: idx + 1\n      };\n      nodes.push(tokenNode);\n\n      // Add link from previous token\n      links.push({\n        source: id - 2,\n        target: id - 1,\n        value: token.probability\n      });\n\n      // Add alternative tokens\n      token.alternatives.slice(0, 3).forEach(alt => {\n        const altNode = {\n          id: id++,\n          name: alt.token,\n          probability: alt.probability,\n          level: idx + 1,\n          isAlternative: true\n        };\n        nodes.push(altNode);\n        links.push({\n          source: id - 2,\n          target: id - 1,\n          value: alt.probability\n        });\n      });\n    });\n    return {\n      nodes,\n      links\n    };\n  };\n  const renderTokenWithTooltip = (token, index) => {\n    const hasStrongAlternatives = token.alternatives.some(alt => alt.probability > token.probability * 0.8);\n    const tooltipContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"token-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Token:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }, this), \" \", token.token]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Probability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this), \" \", (token.probability * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), token.alternatives.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternatives\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Alternatives:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), token.alternatives.map((alt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: alt.probability > token.probability * 0.8 ? '#ff6b6b' : 'inherit'\n          },\n          children: [alt.token, \": \", (alt.probability * 100).toFixed(1), \"%\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Tippy, {\n      content: tooltipContent,\n      placement: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `token ${hasStrongAlternatives ? 'has-alternatives' : ''}`,\n        style: {\n          backgroundColor: getColor(token.probability),\n          borderBottom: hasStrongAlternatives ? '2px dashed #ff6b6b' : 'none',\n          padding: '2px 0',\n          margin: '0 1px',\n          borderRadius: '3px',\n          cursor: 'pointer',\n          display: 'inline-block'\n        },\n        onClick: () => setCurrentStep(index),\n        children: [token.token.replace('Ġ', ' '), hasStrongAlternatives && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '0.7em',\n            verticalAlign: 'super',\n            color: '#ff6b6b',\n            marginLeft: '2px'\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!prompt.trim()) return;\n\n    // Add user message immediately\n    const userMessage = {\n      type: 'user',\n      content: prompt.trim()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    setError('');\n    setPrompt(''); // Clear input after sending\n\n    try {\n      const response = await getCompletion(prompt);\n\n      // Extract tokens and their probabilities from the completions API response\n      const {\n        text,\n        logprobs\n      } = response.choices[0];\n      const {\n        tokens,\n        token_logprobs,\n        top_logprobs\n      } = logprobs;\n\n      // Create token objects with probability data\n      const processedTokens = tokens.map((token, index) => ({\n        token,\n        probability: Math.exp(token_logprobs[index]),\n        // Convert log probability to probability\n        alternatives: top_logprobs[index] ? Object.entries(top_logprobs[index]).map(([token, logprob]) => ({\n          token,\n          probability: Math.exp(logprob)\n        })) : []\n      }));\n\n      // Add assistant message\n      const assistantMessage = {\n        type: 'assistant',\n        tokens: processedTokens\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Build and set token tree for visualization\n      const tree = buildTokenTree(processedTokens);\n      setTokenTree(tree);\n      setCurrentStep(0);\n      console.log('Response:', response);\n      console.log('Processed tokens:', processedTokens);\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to get response. Please check your API key and try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const renderTokens = tokens => {\n    let words = [];\n    let currentWord = [];\n    let currentWordProbability = 0;\n    let tokenCount = 0;\n    tokens.forEach(tObj => {\n      if (tObj.isWordStart) {\n        if (currentWord.length > 0) {\n          const avgProb = currentWordProbability / tokenCount;\n          words.push({\n            tokens: currentWord,\n            averageProbability: avgProb\n          });\n        }\n        currentWord = [tObj];\n        currentWordProbability = tObj.probability;\n        tokenCount = 1;\n      } else {\n        currentWord.push(tObj);\n        currentWordProbability += tObj.probability;\n        tokenCount++;\n      }\n    });\n\n    // Add the last word if exists\n    if (currentWord.length > 0) {\n      const avgProb = currentWordProbability / tokenCount;\n      words.push({\n        tokens: currentWord,\n        averageProbability: avgProb\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineHeight: '1.8',\n        whiteSpace: 'pre-wrap'\n      },\n      children: words.map((word, wordIndex) => {\n        const avgProb = word.averageProbability;\n        const combinedText = word.tokens.map(t => t.token.replace('Ġ', '')).join('');\n        return /*#__PURE__*/_jsxDEV(Tippy, {\n          content: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-tooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Word:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 24\n              }, this), \" \\\"\", combinedText, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Confidence:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 24\n              }, this), \" \", (avgProb * 100).toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tokens:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), word.tokens.map((tObj, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: [\"\\u2022 \\\"\", tObj.token, \"\\\": \", (tObj.probability * 100).toFixed(1), \"%\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this),\n          placement: \"top\",\n          arrow: true,\n          duration: 200,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word\",\n            style: {\n              backgroundColor: getColor(avgProb),\n              padding: '2px 4px',\n              margin: '0 3px',\n              borderRadius: '3px',\n              display: 'inline-block',\n              cursor: 'help',\n              border: '1px solid rgba(0,0,0,0.1)',\n              boxShadow: '0 1px 2px rgba(0,0,0,0.05)',\n              position: 'relative',\n              lineHeight: '1.5'\n            },\n            children: [combinedText, !combinedText.match(/^[.,!?;:]/) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                right: '-3px',\n                top: '0',\n                bottom: '0',\n                width: '1px',\n                backgroundColor: 'rgba(0,0,0,0.1)',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, wordIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OpenAI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"High confidence (\\u226550%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'yellow'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Medium confidence (20-49%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Low confidence (<20%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: message.type === 'user' ? 'You' : 'Assistant'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.type === 'user' ? message.content : renderTokens(message.tokens)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: \"Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"prompt-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: isLoading,\n          className: \"prompt-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          className: \"submit-button\",\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"I4pZ3p3jAJXa0mTYCnauhOVz7Ic=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","getCompletion","ForceGraph2D","BarChart","Bar","XAxis","YAxis","Tooltip","RechartsTooltip","Tippy","jsxDEV","_jsxDEV","getColor","probability","Math","floor","Chat","_s","prompt","setPrompt","isLoading","setIsLoading","error","setError","messages","setMessages","stepMode","setStepMode","currentStep","setCurrentStep","tokenTree","setTokenTree","messagesEndRef","graphRef","length","type","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","buildTokenTree","tokens","alternatives","nodes","links","id","push","name","level","forEach","token","idx","tokenNode","source","target","value","slice","alt","altNode","isAlternative","renderTokenWithTooltip","index","hasStrongAlternatives","some","tooltipContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","i","style","color","content","placement","backgroundColor","borderBottom","padding","margin","borderRadius","cursor","display","onClick","replace","fontSize","verticalAlign","marginLeft","handleSubmit","e","preventDefault","trim","userMessage","prev","response","text","logprobs","choices","token_logprobs","top_logprobs","processedTokens","exp","Object","entries","logprob","assistantMessage","tree","console","log","err","renderTokens","words","currentWord","currentWordProbability","tokenCount","tObj","isWordStart","avgProb","averageProbability","lineHeight","whiteSpace","word","wordIndex","combinedText","t","join","arrow","duration","border","boxShadow","position","match","right","top","bottom","width","zIndex","message","ref","onSubmit","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/sjobergf/Documents/chatProbs/token-prob-chat/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { getCompletion } from '../services/openaiService';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip as RechartsTooltip } from 'recharts';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport './Chat.css';\n\nconst getColor = (probability) => {\n  // Red to yellow to green gradient\n  if (probability < 0.3) {\n    return `rgba(255, 0, 0, ${0.2 + probability * 2})`; // More red for very low probs\n  } else if (probability < 0.7) {\n    return `rgba(255, ${Math.floor(255 * (probability - 0.3) / 0.4)}, 0, 0.5)`; // Yellow transition\n  } else {\n    return `rgba(0, 255, 0, ${probability * 0.5})`; // Green for high probs\n  }\n};\n\nconst Chat = () => {\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [stepMode, setStepMode] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tokenTree, setTokenTree] = useState(null);\n  const messagesEndRef = useRef(null);\n  const graphRef = useRef(null);\n\n  // Reset currentStep when a new message is added\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].type === 'assistant') {\n      setCurrentStep(0);\n    }\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const buildTokenTree = (tokens, alternatives) => {\n    const nodes = [];\n    const links = [];\n    let id = 0;\n\n    // Add root node\n    nodes.push({\n      id: id++,\n      name: 'Start',\n      level: 0\n    });\n\n    tokens.forEach((token, idx) => {\n      // Add main token\n      const tokenNode = {\n        id: id++,\n        name: token.token,\n        probability: token.probability,\n        level: idx + 1\n      };\n      nodes.push(tokenNode);\n\n      // Add link from previous token\n      links.push({\n        source: id - 2,\n        target: id - 1,\n        value: token.probability\n      });\n\n      // Add alternative tokens\n      token.alternatives.slice(0, 3).forEach(alt => {\n        const altNode = {\n          id: id++,\n          name: alt.token,\n          probability: alt.probability,\n          level: idx + 1,\n          isAlternative: true\n        };\n        nodes.push(altNode);\n        links.push({\n          source: id - 2,\n          target: id - 1,\n          value: alt.probability\n        });\n      });\n    });\n\n    return { nodes, links };\n  };\n\n  const renderTokenWithTooltip = (token, index) => {\n    const hasStrongAlternatives = token.alternatives.some(alt => alt.probability > token.probability * 0.8);\n    \n    const tooltipContent = (\n      <div className=\"token-tooltip\">\n        <div><strong>Token:</strong> {token.token}</div>\n        <div><strong>Probability:</strong> {(token.probability * 100).toFixed(1)}%</div>\n        {token.alternatives.length > 0 && (\n          <div className=\"alternatives\">\n            <strong>Alternatives:</strong>\n            {token.alternatives.map((alt, i) => (\n              <div key={i} style={{\n                color: alt.probability > token.probability * 0.8 ? '#ff6b6b' : 'inherit'\n              }}>\n                {alt.token}: {(alt.probability * 100).toFixed(1)}%\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <Tippy key={index} content={tooltipContent} placement=\"top\">\n        <span\n          className={`token ${hasStrongAlternatives ? 'has-alternatives' : ''}`}\n          style={{ \n            backgroundColor: getColor(token.probability),\n            borderBottom: hasStrongAlternatives ? '2px dashed #ff6b6b' : 'none',\n            padding: '2px 0',\n            margin: '0 1px',\n            borderRadius: '3px',\n            cursor: 'pointer',\n            display: 'inline-block'\n          }}\n          onClick={() => setCurrentStep(index)}\n        >\n          {token.token.replace('Ġ', ' ')}\n          {hasStrongAlternatives && \n            <span style={{ \n              fontSize: '0.7em', \n              verticalAlign: 'super',\n              color: '#ff6b6b',\n              marginLeft: '2px'\n            }}>*</span>\n          }\n        </span>\n      </Tippy>\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!prompt.trim()) return;\n    \n    // Add user message immediately\n    const userMessage = {\n      type: 'user',\n      content: prompt.trim()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    \n    setIsLoading(true);\n    setError('');\n    setPrompt(''); // Clear input after sending\n    \n    try {\n      const response = await getCompletion(prompt);\n      \n      // Extract tokens and their probabilities from the completions API response\n      const { text, logprobs } = response.choices[0];\n      const { tokens, token_logprobs, top_logprobs } = logprobs;\n      \n      // Create token objects with probability data\n      const processedTokens = tokens.map((token, index) => ({\n        token,\n        probability: Math.exp(token_logprobs[index]), // Convert log probability to probability\n        alternatives: top_logprobs[index] ? Object.entries(top_logprobs[index]).map(([token, logprob]) => ({\n          token,\n          probability: Math.exp(logprob)\n        })) : []\n      }));\n      \n      // Add assistant message\n      const assistantMessage = {\n        type: 'assistant',\n        tokens: processedTokens\n      };\n      \n      setMessages(prev => [...prev, assistantMessage]);\n      \n      // Build and set token tree for visualization\n      const tree = buildTokenTree(processedTokens);\n      setTokenTree(tree);\n      setCurrentStep(0);\n      \n      console.log('Response:', response);\n      console.log('Processed tokens:', processedTokens);\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to get response. Please check your API key and try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const renderTokens = (tokens) => {\n    let words = [];\n    let currentWord = [];\n    let currentWordProbability = 0;\n    let tokenCount = 0;\n\n    tokens.forEach((tObj) => {\n      if (tObj.isWordStart) {\n        if (currentWord.length > 0) {\n          const avgProb = currentWordProbability / tokenCount;\n          words.push({\n            tokens: currentWord,\n            averageProbability: avgProb\n          });\n        }\n        currentWord = [tObj];\n        currentWordProbability = tObj.probability;\n        tokenCount = 1;\n      } else {\n        currentWord.push(tObj);\n        currentWordProbability += tObj.probability;\n        tokenCount++;\n      }\n    });\n\n    // Add the last word if exists\n    if (currentWord.length > 0) {\n      const avgProb = currentWordProbability / tokenCount;\n      words.push({\n        tokens: currentWord,\n        averageProbability: avgProb\n      });\n    }\n\n    return (\n      <div style={{ lineHeight: '1.8', whiteSpace: 'pre-wrap' }}>\n        {words.map((word, wordIndex) => {\n          const avgProb = word.averageProbability;\n          const combinedText = word.tokens\n            .map(t => t.token.replace('Ġ', ''))\n            .join('');\n\n          return (\n            <Tippy\n              key={wordIndex}\n              content={\n                <div className=\"token-tooltip\">\n                  <div><strong>Word:</strong> \"{combinedText}\"</div>\n                  <div><strong>Confidence:</strong> {(avgProb * 100).toFixed(1)}%</div>\n                  <div><strong>Tokens:</strong></div>\n                  {word.tokens.map((tObj, i) => (\n                    <div key={i} style={{marginLeft: '10px'}}>\n                      • \"{tObj.token}\": {(tObj.probability * 100).toFixed(1)}%\n                    </div>\n                  ))}\n                </div>\n              }\n              placement=\"top\"\n              arrow={true}\n              duration={200}\n            >\n              <span\n                className=\"word\"\n                style={{ \n                  backgroundColor: getColor(avgProb),\n                  padding: '2px 4px',\n                  margin: '0 3px',\n                  borderRadius: '3px',\n                  display: 'inline-block',\n                  cursor: 'help',\n                  border: '1px solid rgba(0,0,0,0.1)',\n                  boxShadow: '0 1px 2px rgba(0,0,0,0.05)',\n                  position: 'relative',\n                  lineHeight: '1.5'\n                }}\n              >\n                {combinedText}\n                {!combinedText.match(/^[.,!?;:]/) &&\n                  <span style={{\n                    position: 'absolute',\n                    right: '-3px',\n                    top: '0',\n                    bottom: '0',\n                    width: '1px',\n                    backgroundColor: 'rgba(0,0,0,0.1)',\n                    zIndex: 1\n                  }} />\n                }\n              </span>\n            </Tippy>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>OpenAI Chat</h1>\n        <div className=\"legend\">\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'green' }}></span>\n            <span>High confidence (≥50%)</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'yellow' }}></span>\n            <span>Medium confidence (20-49%)</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'red' }}></span>\n            <span>Low confidence (&lt;20%)</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-header\">{message.type === 'user' ? 'You' : 'Assistant'}</div>\n            <div className=\"message-content\">\n              {message.type === 'user' ? (\n                message.content\n              ) : (\n                renderTokens(message.tokens)\n              )}\n            </div>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message assistant\">\n            <div className=\"message-header\">Assistant</div>\n            <div className=\"message-content typing\">Typing...</div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"input-container\">\n        <form onSubmit={handleSubmit} className=\"prompt-form\">\n          <input\n            type=\"text\"\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n            placeholder=\"Type your message...\"\n            disabled={isLoading}\n            className=\"prompt-input\"\n          />\n          <button type=\"submit\" disabled={isLoading} className=\"submit-button\">\n            {isLoading ? 'Sending...' : 'Send'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}