{"ast":null,"code":"var _jsxFileName = \"/Users/sjobergf/Documents/chatProbs/token-prob-chat/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { getCompletion } from '../services/openaiService';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [stepMode, setStepMode] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tokenTree, setTokenTree] = useState(null);\n  const messagesEndRef = useRef(null);\n  const graphRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const buildTokenTree = (tokens, alternatives) => {\n    const nodes = [];\n    const links = [];\n    let id = 0;\n\n    // Add root node\n    nodes.push({\n      id: id++,\n      name: 'Start',\n      level: 0\n    });\n    tokens.forEach((token, idx) => {\n      // Add main token\n      const tokenNode = {\n        id: id++,\n        name: token.token,\n        probability: token.probability,\n        level: idx + 1\n      };\n      nodes.push(tokenNode);\n\n      // Add link from previous token\n      links.push({\n        source: id - 2,\n        target: id - 1,\n        value: token.probability\n      });\n\n      // Add alternative tokens\n      token.alternatives.slice(0, 3).forEach(alt => {\n        const altNode = {\n          id: id++,\n          name: alt.token,\n          probability: alt.probability,\n          level: idx + 1,\n          isAlternative: true\n        };\n        nodes.push(altNode);\n        links.push({\n          source: id - 2,\n          target: id - 1,\n          value: alt.probability\n        });\n      });\n    });\n    return {\n      nodes,\n      links\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!prompt.trim()) return;\n\n    // Add user message immediately\n    const userMessage = {\n      type: 'user',\n      content: prompt.trim()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    setError('');\n    setPrompt(''); // Clear input after sending\n\n    try {\n      const response = await getCompletion(prompt);\n\n      // Extract tokens and their probabilities from the completions API response\n      const {\n        text,\n        logprobs\n      } = response.choices[0];\n      const {\n        tokens,\n        token_logprobs,\n        top_logprobs\n      } = logprobs;\n\n      // Create token objects with probability data\n      const processedTokens = tokens.map((token, index) => ({\n        token,\n        probability: Math.exp(token_logprobs[index]),\n        // Convert log probability to probability\n        alternatives: top_logprobs[index] ? Object.entries(top_logprobs[index]).map(([token, logprob]) => ({\n          token,\n          probability: Math.exp(logprob)\n        })) : []\n      }));\n\n      // Add assistant message\n      const assistantMessage = {\n        type: 'assistant',\n        tokens: processedTokens\n      };\n\n      // Build token tree for visualization\n      const tree = buildTokenTree(processedTokens);\n      setTokenTree(tree);\n      setMessages(prev => [...prev, assistantMessage]);\n      console.log('Response:', response);\n      console.log('Processed tokens:', processedTokens);\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to get response. Please check your API key and try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to determine color based on probability\n  const getColor = probability => {\n    if (probability >= 0.5) return 'green';\n    if (probability >= 0.2) return 'yellow';\n    return 'red';\n  };\n\n  // Format probability as percentage\n  const formatProbability = prob => `${(prob * 100).toFixed(1)}%`;\n  const renderTokens = tokens => {\n    // Group tokens into words more intelligently\n    const words = [];\n    let currentWord = [];\n    let currentWordProbability = 0;\n    let tokenCount = 0;\n    tokens.forEach(tObj => {\n      // Clean the token from special characters\n      const cleanToken = tObj.token.replace('Ġ', '');\n\n      // Start a new word if:\n      // 1. Current token starts with a space\n      // 2. Current token is punctuation\n      // 3. We're at the start\n      if (tObj.token.startsWith('Ġ') || tObj.token.match(/^[.,!?;:]/) || currentWord.length === 0) {\n        if (currentWord.length > 0) {\n          // Calculate average probability for the word\n          const avgProb = currentWordProbability / tokenCount;\n          words.push({\n            tokens: currentWord,\n            averageProbability: avgProb\n          });\n        }\n        currentWord = [tObj];\n        currentWordProbability = tObj.probability;\n        tokenCount = 1;\n      } else {\n        currentWord.push(tObj);\n        currentWordProbability += tObj.probability;\n        tokenCount++;\n      }\n    });\n\n    // Add the last word if exists\n    if (currentWord.length > 0) {\n      const avgProb = currentWordProbability / tokenCount;\n      words.push({\n        tokens: currentWord,\n        averageProbability: avgProb\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineHeight: '1.8',\n        whiteSpace: 'pre-wrap'\n      },\n      children: words.map((word, wordIndex) => {\n        const avgProb = word.averageProbability;\n        const combinedText = word.tokens.map(t => t.token.replace('Ġ', '')).join('');\n        return /*#__PURE__*/_jsxDEV(Tippy, {\n          content: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-tooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Word:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 24\n              }, this), \" \\\"\", combinedText, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Confidence:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 24\n              }, this), \" \", formatProbability(avgProb)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tokens:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), word.tokens.map((tObj, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: [\"\\u2022 \\\"\", tObj.token, \"\\\": \", formatProbability(tObj.probability)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this),\n          placement: \"top\",\n          arrow: true,\n          duration: 200,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word\",\n            style: {\n              backgroundColor: getColor(avgProb),\n              padding: '2px 4px',\n              margin: '0 3px',\n              borderRadius: '3px',\n              display: 'inline-block',\n              cursor: 'help',\n              border: '1px solid rgba(0,0,0,0.1)',\n              boxShadow: '0 1px 2px rgba(0,0,0,0.05)',\n              position: 'relative',\n              lineHeight: '1.5'\n            },\n            children: [combinedText, !combinedText.match(/^[.,!?;:]/) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                right: '-3px',\n                top: '0',\n                bottom: '0',\n                width: '1px',\n                backgroundColor: 'rgba(0,0,0,0.1)',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, wordIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OpenAI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"High confidence (\\u226550%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'yellow'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Medium confidence (20-49%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Low confidence (<20%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: message.type === 'user' ? 'You' : 'Assistant'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.type === 'user' ? message.content : renderTokens(message.tokens)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: \"Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"prompt-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: isLoading,\n          className: \"prompt-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          className: \"submit-button\",\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"q7evxnpsBUVCTxfvOaxLoDQdGGE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","getCompletion","ForceGraph2D","BarChart","Bar","XAxis","YAxis","Tooltip","jsxDEV","_jsxDEV","Chat","_s","prompt","setPrompt","isLoading","setIsLoading","error","setError","messages","setMessages","stepMode","setStepMode","currentStep","setCurrentStep","tokenTree","setTokenTree","messagesEndRef","graphRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","buildTokenTree","tokens","alternatives","nodes","links","id","push","name","level","forEach","token","idx","tokenNode","probability","source","target","value","slice","alt","altNode","isAlternative","handleSubmit","e","preventDefault","trim","userMessage","type","content","prev","response","text","logprobs","choices","token_logprobs","top_logprobs","processedTokens","map","index","Math","exp","Object","entries","logprob","assistantMessage","tree","console","log","err","getColor","formatProbability","prob","toFixed","renderTokens","words","currentWord","currentWordProbability","tokenCount","tObj","cleanToken","replace","startsWith","match","length","avgProb","averageProbability","style","lineHeight","whiteSpace","children","word","wordIndex","combinedText","t","join","Tippy","className","fileName","_jsxFileName","lineNumber","columnNumber","i","marginLeft","placement","arrow","duration","backgroundColor","padding","margin","borderRadius","display","cursor","border","boxShadow","position","right","top","bottom","width","zIndex","message","ref","onSubmit","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/sjobergf/Documents/chatProbs/token-prob-chat/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { getCompletion } from '../services/openaiService';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport './Chat.css';\n\nconst Chat = () => {\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [stepMode, setStepMode] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tokenTree, setTokenTree] = useState(null);\n  const messagesEndRef = useRef(null);\n  const graphRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const buildTokenTree = (tokens, alternatives) => {\n    const nodes = [];\n    const links = [];\n    let id = 0;\n\n    // Add root node\n    nodes.push({\n      id: id++,\n      name: 'Start',\n      level: 0\n    });\n\n    tokens.forEach((token, idx) => {\n      // Add main token\n      const tokenNode = {\n        id: id++,\n        name: token.token,\n        probability: token.probability,\n        level: idx + 1\n      };\n      nodes.push(tokenNode);\n\n      // Add link from previous token\n      links.push({\n        source: id - 2,\n        target: id - 1,\n        value: token.probability\n      });\n\n      // Add alternative tokens\n      token.alternatives.slice(0, 3).forEach(alt => {\n        const altNode = {\n          id: id++,\n          name: alt.token,\n          probability: alt.probability,\n          level: idx + 1,\n          isAlternative: true\n        };\n        nodes.push(altNode);\n        links.push({\n          source: id - 2,\n          target: id - 1,\n          value: alt.probability\n        });\n      });\n    });\n\n    return { nodes, links };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!prompt.trim()) return;\n    \n    // Add user message immediately\n    const userMessage = {\n      type: 'user',\n      content: prompt.trim()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    \n    setIsLoading(true);\n    setError('');\n    setPrompt(''); // Clear input after sending\n    \n    try {\n      const response = await getCompletion(prompt);\n      \n      // Extract tokens and their probabilities from the completions API response\n      const { text, logprobs } = response.choices[0];\n      const { tokens, token_logprobs, top_logprobs } = logprobs;\n      \n      // Create token objects with probability data\n      const processedTokens = tokens.map((token, index) => ({\n        token,\n        probability: Math.exp(token_logprobs[index]), // Convert log probability to probability\n        alternatives: top_logprobs[index] ? Object.entries(top_logprobs[index]).map(([token, logprob]) => ({\n          token,\n          probability: Math.exp(logprob)\n        })) : []\n      }));\n      \n      // Add assistant message\n      const assistantMessage = {\n        type: 'assistant',\n        tokens: processedTokens\n      };\n\n      // Build token tree for visualization\n      const tree = buildTokenTree(processedTokens);\n      setTokenTree(tree);\n      setMessages(prev => [...prev, assistantMessage]);\n      \n      console.log('Response:', response);\n      console.log('Processed tokens:', processedTokens);\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to get response. Please check your API key and try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to determine color based on probability\n  const getColor = (probability) => {\n    if (probability >= 0.5) return 'green';\n    if (probability >= 0.2) return 'yellow';\n    return 'red';\n  };\n\n  // Format probability as percentage\n  const formatProbability = (prob) => `${(prob * 100).toFixed(1)}%`;\n\n  const renderTokens = (tokens) => {\n    // Group tokens into words more intelligently\n    const words = [];\n    let currentWord = [];\n    let currentWordProbability = 0;\n    let tokenCount = 0;\n    \n    tokens.forEach((tObj) => {\n      // Clean the token from special characters\n      const cleanToken = tObj.token.replace('Ġ', '');\n      \n      // Start a new word if:\n      // 1. Current token starts with a space\n      // 2. Current token is punctuation\n      // 3. We're at the start\n      if (tObj.token.startsWith('Ġ') || \n          tObj.token.match(/^[.,!?;:]/) || \n          currentWord.length === 0) {\n        \n        if (currentWord.length > 0) {\n          // Calculate average probability for the word\n          const avgProb = currentWordProbability / tokenCount;\n          words.push({\n            tokens: currentWord,\n            averageProbability: avgProb\n          });\n        }\n        currentWord = [tObj];\n        currentWordProbability = tObj.probability;\n        tokenCount = 1;\n      } else {\n        currentWord.push(tObj);\n        currentWordProbability += tObj.probability;\n        tokenCount++;\n      }\n    });\n    \n    // Add the last word if exists\n    if (currentWord.length > 0) {\n      const avgProb = currentWordProbability / tokenCount;\n      words.push({\n        tokens: currentWord,\n        averageProbability: avgProb\n      });\n    }\n\n    return (\n      <div style={{ lineHeight: '1.8', whiteSpace: 'pre-wrap' }}>\n        {words.map((word, wordIndex) => {\n          const avgProb = word.averageProbability;\n          const combinedText = word.tokens\n            .map(t => t.token.replace('Ġ', ''))\n            .join('');\n\n          return (\n            <Tippy\n              key={wordIndex}\n              content={\n                <div className=\"token-tooltip\">\n                  <div><strong>Word:</strong> \"{combinedText}\"</div>\n                  <div><strong>Confidence:</strong> {formatProbability(avgProb)}</div>\n                  <div><strong>Tokens:</strong></div>\n                  {word.tokens.map((tObj, i) => (\n                    <div key={i} style={{marginLeft: '10px'}}>\n                      • \"{tObj.token}\": {formatProbability(tObj.probability)}\n                    </div>\n                  ))}\n                </div>\n              }\n              placement=\"top\"\n              arrow={true}\n              duration={200}\n            >\n              <span\n                className=\"word\"\n                style={{ \n                  backgroundColor: getColor(avgProb),\n                  padding: '2px 4px',\n                  margin: '0 3px',\n                  borderRadius: '3px',\n                  display: 'inline-block',\n                  cursor: 'help',\n                  border: '1px solid rgba(0,0,0,0.1)',\n                  boxShadow: '0 1px 2px rgba(0,0,0,0.05)',\n                  position: 'relative',\n                  lineHeight: '1.5'\n                }}\n              >\n                {combinedText}\n                {!combinedText.match(/^[.,!?;:]/) &&\n                  <span style={{\n                    position: 'absolute',\n                    right: '-3px',\n                    top: '0',\n                    bottom: '0',\n                    width: '1px',\n                    backgroundColor: 'rgba(0,0,0,0.1)',\n                    zIndex: 1\n                  }} />\n                }\n              </span>\n            </Tippy>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>OpenAI Chat</h1>\n        <div className=\"legend\">\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'green' }}></span>\n            <span>High confidence (≥50%)</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'yellow' }}></span>\n            <span>Medium confidence (20-49%)</span>\n          </div>\n          <div className=\"legend-item\">\n            <span className=\"legend-color\" style={{ backgroundColor: 'red' }}></span>\n            <span>Low confidence (&lt;20%)</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-header\">{message.type === 'user' ? 'You' : 'Assistant'}</div>\n            <div className=\"message-content\">\n              {message.type === 'user' ? (\n                message.content\n              ) : (\n                renderTokens(message.tokens)\n              )}\n            </div>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message assistant\">\n            <div className=\"message-header\">Assistant</div>\n            <div className=\"message-content typing\">Typing...</div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"input-container\">\n        <form onSubmit={handleSubmit} className=\"prompt-form\">\n          <input\n            type=\"text\"\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n            placeholder=\"Type your message...\"\n            disabled={isLoading}\n            className=\"prompt-input\"\n          />\n          <button type=\"submit\" disabled={isLoading} className=\"submit-button\">\n            {isLoading ? 'Sending...' : 'Send'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}